% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{Unif_v_exp_Q}
\alias{Unif_v_exp_Q}
\title{Product of horizontal vector and exponential of rate matrix}
\usage{
Unif_v_exp_Q(v, Q, prec, renorm = TRUE, t2 = TRUE, checks = TRUE)
}
\arguments{
\item{v}{Non-negative horizontal vector (dense).}

\item{Q}{Rate matrix (sparse or dense).}

\item{prec}{Required precision - missing mass in the Poisson distribution.}

\item{renorm}{Force elements of each row to sum to 1? Defaults to TRUE.}

\item{t2}{Perform two-tailed truncation? Defaults to TRUE.}

\item{checks}{Perform sanity checks on the arguments? Defaults to TRUE.}
}
\value{
v exp(Q) Dense horizontal vector.
}
\description{
Evaluates v exp(Q) by making all elements of Q non-negative, then using the uniformisation method.
}
\examples{
v <- runif(2); v <- v/sum(v)
Qd <- matrix(nrow=2,ncol=2,data=c(-1,1,2,-2),byrow=TRUE); Unif_v_exp_Q(t(v),Qd,1e-10)

library("Matrix")
d <- 5; f <- 0.3; ones <- rep(1,d); v <- runif(d)
Qs <- abs(rsparsematrix(d,d,f))
diag(Qs) <- 0
Qsum <- as.vector(Qs\%*\%ones)
diag(Qs) <- -Qsum
Unif_v_exp_Q(t(v),Qs,1e-15)

\dontrun{
v <- runif(2); 
M <- matrix(nrow=2,ncol=2,data=c(1,1,2,2),byrow=TRUE); Unif_v_exp_Q(t(v),M,1e-10)
M <- matrix(nrow=2,ncol=2,data=c(1,-1,-2,2),byrow=TRUE); Unif_v_exp_Q(t(v),M,1e-10)
d <- 5; f <- 0.3; ones <- rep(1,d); v <- runif(d)
Qs <- abs(rsparsematrix(d,d,f))
diag(Qs) <- 0; Qsum <- as.vector(Qs\%*\%ones); diag(Qs) <- -Qsum
Unif_v_exp_Q(v,Qs,1e-15)
Unif_v_exp_Q(t(v),Qs,1.5)
Unif_v_exp_Q(t(v),Qs,-2.0)
v <- -runif(d)
Unif_v_exp_Q(t(v),Qs,1e-15)
}
}
\author{
Chris Sherlock
}
